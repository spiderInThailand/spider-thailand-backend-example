// Code generated by MockGen. DO NOT EDIT.
// Source: get_rsa_key_domain.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGetRsaKeyUsecase is a mock of GetRsaKeyUsecase interface.
type MockGetRsaKeyUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockGetRsaKeyUsecaseMockRecorder
}

// MockGetRsaKeyUsecaseMockRecorder is the mock recorder for MockGetRsaKeyUsecase.
type MockGetRsaKeyUsecaseMockRecorder struct {
	mock *MockGetRsaKeyUsecase
}

// NewMockGetRsaKeyUsecase creates a new mock instance.
func NewMockGetRsaKeyUsecase(ctrl *gomock.Controller) *MockGetRsaKeyUsecase {
	mock := &MockGetRsaKeyUsecase{ctrl: ctrl}
	mock.recorder = &MockGetRsaKeyUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetRsaKeyUsecase) EXPECT() *MockGetRsaKeyUsecaseMockRecorder {
	return m.recorder
}

// GenerateRsaKey mocks base method.
func (m *MockGetRsaKeyUsecase) GenerateRsaKey(ctx context.Context) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRsaKey", ctx)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateRsaKey indicates an expected call of GenerateRsaKey.
func (mr *MockGetRsaKeyUsecaseMockRecorder) GenerateRsaKey(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRsaKey", reflect.TypeOf((*MockGetRsaKeyUsecase)(nil).GenerateRsaKey), ctx)
}
